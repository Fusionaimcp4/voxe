services:
  postgres:
    image: postgres:15-alpine
    container_name: localboxs_postgres
    environment:
      POSTGRES_DB: localboxs
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d localboxs"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    container_name: localboxs_app
    build:
      context: .
      dockerfile: Dockerfile.prod
      args:
        DATABASE_URL: ${DATABASE_URL}
    ports:
      - "3200:3000"
    dns:
      - 8.8.8.8
      - 8.8.4.4
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      # Persist dynamic demo content and uploaded files
      - ./public/demos:/app/public/demos
      - ./public/knowledge-bases:/app/public/knowledge-bases
      - ./public/system_messages:/app/public/system_messages
      - ./data:/app/data
    user: "1000:1000"
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      STRIPE_BILLING_ENABLED: ${STRIPE_BILLING_ENABLED}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      TZ: ${TZ}
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL}
      NEXT_PUBLIC_BASE_URL: ${NEXT_PUBLIC_BASE_URL}
      NEXT_PUBLIC_CHATWOOT_BASE_URL: ${NEXT_PUBLIC_CHATWOOT_BASE_URL}
      CHATWOOT_BASE_URL: ${CHATWOOT_BASE_URL}
      CHATWOOT_ACCOUNT_ID: ${CHATWOOT_ACCOUNT_ID}
      CHATWOOT_API_KEY: ${CHATWOOT_API_KEY}
      CHATWOOT_PLATFORM_API_KEY: ${CHATWOOT_PLATFORM_API_KEY}
      N8N_BASE_URL: ${N8N_BASE_URL}
      N8N_API_KEY: ${N8N_API_KEY}
      N8N_DUPLICATE_ENDPOINT: ${N8N_DUPLICATE_ENDPOINT}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      FUSION_BASE_URL: ${FUSION_BASE_URL}
      FUSION_API_KEY: ${FUSION_API_KEY}
      EMAIL_FROM: ${EMAIL_FROM}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_SECURE: ${SMTP_SECURE}
      APP_BASE_URL: ${APP_BASE_URL}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      OAUTH_GOOGLE_ENABLED: ${OAUTH_GOOGLE_ENABLED}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      NEXT_PUBLIC_TURNSTILE_SITE_KEY: ${NEXT_PUBLIC_TURNSTILE_SITE_KEY}
      TURNSTILE_SECRET_KEY: ${TURNSTILE_SECRET_KEY}
      REDIS_URL: ${REDIS_URL}
      DEMO_DOMAIN: ${DEMO_DOMAIN}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  # Note: Demo content is persisted via bind mounts above, not separate volumes